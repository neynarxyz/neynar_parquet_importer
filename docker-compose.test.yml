# Docker Compose for Testing with Neo4j
version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: neynar_parquet_importer
    restart: unless-stopped
    ports:
      - "35432:5432"  # Use different port for tests to avoid conflicts
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5.15
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_db_tx__log_rotation_retention__policy=false
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    ports:
      - "37474:7474"   # HTTP (test port)
      - "37687:7687"   # Bolt (test port)
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-runner:
    build: 
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      postgres:
        condition: service_started
      neo4j:
        condition: service_healthy
    env_file:
      - .env.test
    environment:
      # Override with Docker service names and test ports
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=35432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=neynar_parquet_importer
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=testpassword
      - PYTHONPATH=/app
      - UV_CACHE_DIR=/tmp/uv-cache
    volumes:
      - ./:/app
      - uv_cache:/tmp/uv-cache
    working_dir: /app
    command: uv run pytest tests/test_phase*.py -v

volumes:
  neo4j_data:
  neo4j_logs:
  uv_cache:
